@HP DEV COMMENTS
	#debug_operations
for debug operations, we have the logging mechanism
but it is tiresome to individually put in logging messages
into selective functions and them later remove them when not needed

another way is to include a file called debug.h
or to individually have #define DEBUG_ in the source itself
it is only a matter or setting or clearing a flag for debugging

eg: 
#define DEBUG_GETATTR
 
getattr()
{
	#ifdef DEBUG_GETATTR
		log_msg("debug mode");
	#endif
}


	#_tools_
splint is a tool used to perform static checking on programs to
remove or check errors statically in the code itself. So far, it
has been successful at finding some low-level simple errors that 
could have caused problems in the running.

need to see and search for more such tools as it makes debugging 
easier and allows the developer to focus more on working code
rather than spending hours debugging some weird stupid stuff.

	#return code from operations
the return code for operations is clearly defined in flags.h
yet, some places contain stray integer values which are actually magic numbers
