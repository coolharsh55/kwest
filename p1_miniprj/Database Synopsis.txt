Tables

1. FileDetails
   f_hashkey 	| f_name	|abspath

2. FileMetadata
   f_hashkey	| inode 	| size 		| other meta-info

3. TagDetails
   t_hashkey 	| tagname

4. FileAssociation
   t_hashkey 	| f_hashkey

5. TagAssociation
   t1 		| t2 		| relationid

6. AssociationRelations
   relationid 	| relationtype

   1		  Probably Related
   2 		  Subgroup
   3 		  Related
   4 		  Not Related

//----------------------------------------------------------------------------------------------------

Queries

/*------------------ ADD/REMOVE --------------------------*/

1. int addfile(char *abspath)	//Adds file to kwest
	int f_hashkey=sethashfile(abspath)
	Get f_name form path
	Query : Add to FileDetails Table(f_hashkey,f_name,abspath)
	struct meta = generatemetadata()	//Function which returns metadata using libraries
	addfilemetadata(f_hashkey,meta)		

2. int removefile(char *path)	//Removes file form kwest.
	int f_hashkey=gethashfilekey(path)
	Query : remove f_hashkey from FileAssociation Table //Untag file from all tags it is associated with
	Query : remove file entry from FileDetails  Table

3. int addtag(char *tagname)	//Creates a new tag in kwest
	int t_hashkey=sethashtag(tagname)
	Query : Add to TagDetails Table(t_hashkey,tagname)

4. int removetag(char *tagname)	//Removes an existing tag from kwest
	int t_hashkey = gethashtagkey(tagname)
	Query : remove tag entry from TagDetails

/*------- Tag-File Relation : FileAssociation --------*/

5. int tagfile(char *t,char *f)		//Associates a tag with a file
	int t_hashkey=gethashtagkey(t)
	int f_hashkey=gethashfilekey(f)
	Query : add t_hashkey,f_hashkey to File Association Table

6. int untagfile(char *t,char *f)	//Removes the existing association between the tag and file
	int t_hashkey=gethashtagkey(t)
	int f_hashkey=gethashfilekey(f)
	Query : remove t_hashkey,f_hashkey from File Association Table

7. char *getfile(char *t)	//Returns list of files associated to given tag
	int t_hashkey=gethashtagkey(t)
	Query : get f_hashkey from FileAssociation Table
	char *f_name = gethashfile(f_hashkey)
	return f_name
	
/*-------- Tag-Tag Relation : TagAssociation --------*/

8.  int addassociation(char *t1,char *t2,char *relationtype)		// Associates a tag with another tag
	int relationid=getrelationid(relationtype)
	int t1=gethashtagkey(t1)
	int t2=gethashtagkey(t2)
	Query : add t1, t2,relationid to TagAssociation Table

9.  int removeassociation(char *t1,char *t2,char *relationtype)		//Removes the existing association between the two tags
	int relationid=getrelationid(relationtype)
	int t1=gethashtagkey(t1)
	int t2=gethashtagkey(t2)
	Query : remove entry t1, t2,relationid from TagAssociation Table
	
10. int getassociationrelation(char *t1,char *t2)	//Returns type of association between the two tags
	int t1=gethashtagkey(t1)
	int t2=gethashtagkey(t2)
	Query : return relationid from entry t1, t2 from TagAssociation Table

11. char* getassociation(char *t,char *relationtype)		// returns the tag having a particular association with another tag
	int relationid=getrelationid(relationtype)
	int t1=gethashtagkey(t)
	Query : get t2 from entry t1, relationid from TagAssociation Table
	char *tag = gethashtag(t2)
	return tag	

/*------------------Association Relations ---------------------------*/

12. int setrelation(char *relationtype) 	//creates a new association type and returns the new relationid assigned
	Generate now relationid (increment)
	Query : add relationid,relationtype to AssociationRelation Table

13. int getrelationid(char *relationtype)	//returns relationid for existing relation
	Query : return relationid from AssociationRelation Table	

14. char *getrelationtype(int relationid)	//returns relationtype
	Query : return relationtype from AssociationRelation Table


/*------------ Others --------------------------------*/

15. char *gettags(void)		//List all tags in the system
	Query : get all tagname from TagDetails

16. int addfilemetadata(int f_hashkey,struct *meta)	//adds metadata generated by external libraries to file
	Query : add meta-info in structure meta to FileMetadata


//-------------------------------------------------------------------------------------

Hashing

1. int sethashfile(char *abspath)	//Generaten new f_hashkey for new file to be added in kwest System
2. int sethashtag(char *tagname)	//Generates new t_hashkey for new tag to be created in kwest System

3. int gethashfilekey(char *path)	//Returns f_hashkey for a file in Kwest
	Decode list of tags and filename from path
	Query : get f_hashkey from tags & filename	
4. int gethashtagkey(char *tagname)	//Returns t_hashkey for a tag in Kwest

5. char *gethashfile(int f_hashkey)	//Returns filename(f_name) for a file in Kwest
6. char *gethashtag(int t_hashkey)	//Returns tagname for a tag in Kwest


//----------------------------------------------------------------------------------------------------

Note:

+ Queries Return integer 1(Success) / 0(Fail)
+ abspath : Absolute Path of Files in Base File System
+ path : kwest path/filename
+ generatemetadata() is a Function which returns metadata using libraries
+ structure meta holds all metadata generated by this function.


Issues:
1. Which hashkey to choose between files with same name associated with same set of tags (gethashkey function)
2. FileMetadata table varies with filetype
3. absolute path for file needs hashing?